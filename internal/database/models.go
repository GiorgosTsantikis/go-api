// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
)

type FriendRequestStatus string

const (
	FriendRequestStatusACCEPTED FriendRequestStatus = "ACCEPTED"
	FriendRequestStatusREJECTED FriendRequestStatus = "REJECTED"
	FriendRequestStatusPENDING  FriendRequestStatus = "PENDING"
)

func (e *FriendRequestStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = FriendRequestStatus(s)
	case string:
		*e = FriendRequestStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for FriendRequestStatus: %T", src)
	}
	return nil
}

type NullFriendRequestStatus struct {
	FriendRequestStatus FriendRequestStatus
	Valid               bool // Valid is true if FriendRequestStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullFriendRequestStatus) Scan(value interface{}) error {
	if value == nil {
		ns.FriendRequestStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.FriendRequestStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullFriendRequestStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.FriendRequestStatus), nil
}

type Credential struct {
	ID       uuid.UUID
	Username string
	Email    string
	Password string
}

type Friendship struct {
	ID            uuid.UUID
	UserID        uuid.UUID
	FriendID      uuid.NullUUID
	RequestStatus FriendRequestStatus
}

type User struct {
	ID         uuid.UUID
	Username   string
	Profilepic sql.NullString
}
