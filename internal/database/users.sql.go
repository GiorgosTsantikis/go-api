// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, username, profilePic)
VALUES ($1, $2, $3)
RETURNING id, username, profilepic
`

type CreateUserParams struct {
	ID         uuid.UUID
	Username   string
	Profilepic sql.NullString
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.ID, arg.Username, arg.Profilepic)
	var i User
	err := row.Scan(&i.ID, &i.Username, &i.Profilepic)
	return i, err
}

const getUserByUserName = `-- name: GetUserByUserName :one
SELECT id, username, profilepic FROM users WHERE username=$1
`

func (q *Queries) GetUserByUserName(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByUserName, username)
	var i User
	err := row.Scan(&i.ID, &i.Username, &i.Profilepic)
	return i, err
}
